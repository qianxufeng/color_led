{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"uint",
				"uint8_t	typedef"
			],
			[
				"MicoSp",
				"MicoSpiTransfer(const mico_spi_device_t *spi, const mico_spi_message_segment_t *segments, uint16_t number_of_segments)	OSStatus"
			],
			[
				"MicoSPI",
				"MicoSpiInitialize(const mico_spi_device_t *spi)	OSStatus"
			],
			[
				"mico_rtos_mu",
				"mico_rtos_lock_mutex(mico_mutex_t *mutex)	OSStatus"
			],
			[
				"kNot",
				"kNotInitializedErr	macro"
			],
			[
				"in",
				"initialized	bool"
			],
			[
				"kT",
				"kTypeErr	macro"
			],
			[
				"re",
				"require_noerr(ERR, LABEL)	macro"
			],
			[
				"platform_gpio_",
				"platform_gpio_irq_enable(const platform_gpio_t *gpio, platform_gpio_irq_trigger_t trigger, platform_gpio_irq_callback_t handler, void *arg)	OSStatus"
			],
			[
				"MICO_I2",
				"MICO_I2C_NONE	mico_i2c_t"
			],
			[
				"MICO_AD",
				"MICO_ADC_NONE	mico_adc_t"
			],
			[
				"MICO",
				"MICO_ADC_MAX	mico_adc_t"
			],
			[
				"ch",
				"chunkedDataBufferLen	unsigned int"
			],
			[
				"req",
				"require_action(X, LABEL, ACTION)	macro"
			],
			[
				"c",
				"onClearCallback	OSStatus (*)(struct _HTTPHeader_t *, void *)"
			],
			[
				"kUn",
				"kUnknownErr	macro"
			],
			[
				"o",
				"onReceivedDataCallback	bool (*)(struct _HTTPHeader_t *)"
			],
			[
				"wla",
				"wLanUnConfigured	Config_State_t"
			],
			[
				"WL_",
				"WL_GPIO1_PIN	macro"
			],
			[
				"platform",
				"platform_log(M, ...)	macro"
			],
			[
				"mico",
				"mico_flash_t	typedef"
			],
			[
				"pi",
				"pin_rx	const platform_pin_mapping_t *"
			],
			[
				"MicoGpio",
				"MicoGpioEnableIRQ(mico_gpio_t gpio, mico_gpio_irq_trigger_t trigger, mico_gpio_irq_handler_t handler, void *arg)	OSStatus"
			],
			[
				"MicoGP",
				"MicoGpioEnableIRQ(mico_gpio_t gpio, mico_gpio_irq_trigger_t trigger, mico_gpio_irq_handler_t handler, void *arg)	OSStatus"
			],
			[
				"OUTPUT_OD",
				"OUTPUT_OPEN_DRAIN_NO_PULL	mico_gpio_config_t"
			],
			[
				"MICOSYS",
				"MicoSystemStandBy()	void"
			],
			[
				"MicoWd",
				"MicoWdgInitialize(uint32_t timeout)	OSStatus"
			],
			[
				"MicoR",
				"MicoRtcSetTime(mico_rtc_time_t *time)	OSStatus"
			],
			[
				"m",
				"month	uint8_t"
			],
			[
				"MICO_I",
				"MICO_I2C_CP	macro"
			],
			[
				"ke",
				"keyLength	int"
			],
			[
				"s",
				"security	SECURITY_TYPE_E"
			],
			[
				"MicoGpioO",
				"MicoGpioOutputLow(mico_gpio_t gpio)	OSStatus"
			],
			[
				"k",
				"kBackoffErr	macro"
			],
			[
				"mico_rtos_in",
				"mico_rtos_init_semaphore(mico_semaphore_t *semaphore, int count)	OSStatus"
			],
			[
				"tm",
				"tm_wday	int"
			],
			[
				"tm_m",
				"tm_mon	int"
			],
			[
				"tm_",
				"tm_mday	int"
			],
			[
				"mico_rtos_d",
				"mico_rtos_delete_thread(mico_thread_t *thread)	OSStatus"
			],
			[
				"MICORe",
				"MICORemoveNotification(mico_notify_types_t notify_type, void *functionAddress)	OSStatus"
			],
			[
				"I",
				"INADDR_ANY	macro"
			],
			[
				"mico_th",
				"mico_thread_sleep	macro"
			],
			[
				"MICOWlan",
				"MICOWlanEnablePowerSave	macro"
			],
			[
				"MICOWlanS",
				"MICOWlanStopEasyLink	macro"
			],
			[
				"MICOW",
				"MICOWlanGetIPStatus	macro"
			],
			[
				"MICOWl",
				"MICOWlanGetIPStatus	macro"
			],
			[
				"MICOWlanGe",
				"MICOWlanGetIPStatus	macro"
			],
			[
				"MICOWlanStart",
				"MICOWlanStartAdv	macro"
			],
			[
				"micoGet",
				"micoGetMemoryInfo	macro"
			],
			[
				"DEF",
				"DEFAULT_REMOTE_UDP_PORT	macro"
			],
			[
				"send",
				"sendto(int sockfd, const void *buf, unsigned int len, int flags, const struct sockaddr_t *dest_addr, socklen_t addrlen)	int"
			],
			[
				"DHCP",
				"DHCP_Disable	DHCPOperationMode"
			],
			[
				"DHC",
				"DHCP_Client	DHCPOperationMode"
			],
			[
				"b",
				"BundleSeedID	char [32]"
			],
			[
				"ma",
				"manufacturer	char [32]"
			],
			[
				"n",
				"name	char [32]"
			],
			[
				"uin",
				"uint8_t	typedef"
			],
			[
				"Platform",
				"PlatformWDGReload()	void"
			],
			[
				"RE",
				"REMOTE_CONNECT	enum <anonymous>"
			],
			[
				"_us",
				"_uart_send_mutex	mico_mutex_t"
			],
			[
				"requi",
				"require(X, LABEL)	macro"
			],
			[
				"_uart",
				"_uart_send_mutex	mico_mutex_t"
			],
			[
				"mico_rtos_init_s",
				"mico_rtos_init_semaphore(mico_semaphore_t *semaphore, int count)	MxchipStatus"
			],
			[
				"mico_rtosge",
				"mico_rtos_get_semaphore(mico_semaphore_t *semaphore, unsigned int timeout_ms)	MxchipStatus"
			],
			[
				"MICO_",
				"MICO_NEVER_TIMEOUT	macro"
			],
			[
				"eState_",
				"eState_Wlan_Powerdown	SYS_State_t"
			],
			[
				"plat",
				"PlatformUartIn"
			],
			[
				"memc",
				"memcmp(const void *, const void *, size_t)	int"
			],
			[
				"mico_rtos",
				"mico_rtos_init_mutex(mico_mutex_t *mutex)	MxchipStatus"
			],
			[
				"mico_t",
				"mico_mutex_t	typedef"
			],
			[
				"mico_rt",
				"mico_rtos_set_semaphore(mico_semaphore_t *semaphore)	MxchipStatus"
			],
			[
				"DE",
				"DEAFULT_REMOTE_SERVER	macro"
			],
			[
				"fl",
				"flashContentInRam	flash_content_t"
			],
			[
				"kNo",
				"kNoErr	macro"
			],
			[
				"lo",
				"localTcpClient_fd	int *"
			],
			[
				"PlatformFlash",
				"PlatformFlashWrite(volatile uint32_t *FlashAddress, uint32_t *Data, uint32_t DataLength)	OSStatus"
			],
			[
				"Platformf",
				"PlatformFlashInitialize()	OSStatus"
			],
			[
				"kc",
				"kChecksumErr	macro"
			],
			[
				"kun",
				"kUnknownErr	macro"
			],
			[
				"kC",
				"kChecksumErr	macro"
			],
			[
				"f",
				"flashContentInRam	flash_content_t"
			],
			[
				"fla",
				"flashContentInRam	flash_content_t"
			],
			[
				"mico_l",
				"mico_log(M, ...)	macro"
			],
			[
				"Button_STANDBY_",
				"Button_STANDBY_PIN	macro"
			],
			[
				"GPIO_Read",
				"GPIO_ReadInputDataBit(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)	uint8_t"
			],
			[
				"easylink",
				"easylinkClient_fd	int"
			],
			[
				"mico_rtos_set",
				"mico_rtos_set_semaphore(mico_semaphore_t *semaphore)	MxchipStatus"
			],
			[
				"es",
				"eState_Software_Reset	SYS_State_t"
			],
			[
				"mico_rtos_init_",
				"mico_rtos_init_semaphore(mico_semaphore_t *semaphore, int count)	MxchipStatus"
			],
			[
				"mico_s",
				"mico_semaphore_t	typedef"
			],
			[
				"e",
				"easyLinkSkip	bool"
			],
			[
				"require_noerr",
				"require_noerr_action(ERR, LABEL, ACTION)	macro"
			],
			[
				"DH",
				"DHCP_Client	DHCPOperationMode"
			],
			[
				"kn",
				"kNoErr	macro"
			],
			[
				"requ",
				"require(X, LABEL)	macro"
			],
			[
				"l",
				"localIp	char [16]"
			],
			[
				"ip",
				"local_ip_addr	char [16]"
			],
			[
				"int",
				"int32_t	typedef"
			],
			[
				"d",
				"dhcpEnable	bool"
			],
			[
				"inet",
				"inet_ntoa(char *s, unsigned int x)	char *"
			],
			[
				"a",
				"allConfigured	config_type"
			],
			[
				"Clos",
				"CloseEasylink2()	int"
			],
			[
				"mico_notify_WIFI_S",
				"mico_notify_WIFI_STATUS_CHANGED	mico_notify_types_t"
			],
			[
				"us",
				"user_key	char [64]"
			],
			[
				"u",
				"user_key	char [64]"
			],
			[
				"key",
				"key_len	int"
			],
			[
				"MX",
				"MXCHIP_SUCCESS	MxchipStatus"
			],
			[
				"require_",
				"require_action(X, LABEL, ACTION)	macro"
			],
			[
				"strn",
				"strncpy(char *restrict, const char *restrict, size_t)	char *"
			],
			[
				"__str",
				"__strdup_trans_dot(char *src)	char *"
			],
			[
				"p",
				"protocol	char [32]"
			],
			[
				"temp",
				"temp2	WiFi_Status_Notify *"
			],
			[
				"kOper",
				"kNotPreparedErr	macro"
			],
			[
				"mico_rtos_i",
				"mico_rtos_init_mutex(mico_mutex_t *mutex)	MxchipStatus"
			],
			[
				"kU",
				"kUnknownErr	macro"
			],
			[
				"mico_rtos_ge",
				"mico_rtos_get_semaphore(mico_semaphore_t *semaphore, unsigned int timeout_ms)	MxchipStatus"
			],
			[
				"t",
				"txt_att	char *"
			],
			[
				"MF",
				"MFi_SERVICE_MFi	macro"
			],
			[
				"mico_rtos_de",
				"mico_rtos_delete_thread(mico_thread_t *thread)	MxchipStatus"
			],
			[
				"mico_re",
				"mico_rtos_init_mutex(mico_mutex_t *mutex)	MxchipStatus"
			],
			[
				"E",
				"ENABLE	FunctionalState"
			],
			[
				"ea",
				"eaBundleSeedID	char *"
			],
			[
				"support",
				"supports5GHzWiFi	bool"
			],
			[
				"supportsAirp",
				"supportsAirPrint	bool"
			],
			[
				"w",
				"supportsWakeOnWireless	bool"
			],
			[
				"wi",
				"wifi_key	char [32]"
			],
			[
				"WAC_N",
				"WAC_NetConfig	network_InitTypeDef_st *"
			],
			[
				"de",
				"destinationSSID	char*"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"",
				"Package Control: Install Package"
			],
			[
				"git",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"v",
				"View: Toggle Side Bar"
			],
			[
				"Cscope:Look up symbol",
				"Cscope: Look up symbol"
			],
			[
				":",
				"View: Toggle Tabs"
			],
			[
				":q",
				"Set Syntax: SQL"
			],
			[
				"Package Control: install		",
				"Package Control: Install Package"
			],
			[
				"Snippet: ",
				"Snippet: Lorem ipsum"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 125.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/William/Develop/MiCO/Demos/COM.MXCHIP.BASIC/tcpip/tcp_client/tcp_client.c",
		"/Users/William/Develop/MiCO/Demos/COM.MXCHIP.BASIC/http/http_client.c",
		"/Users/William/Develop/MiCO/Projects/STM32F4xx/COM.MXCHIP.BASIC/sublime/COM.MXCHIP.BASIC.sublime-project",
		"/Users/William/Develop/MiCO/Platform/MCU/STM32F4xx/peripherals/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rtc.c",
		"/Users/William/Develop/MiCO/include/mico_system.h",
		"/Users/William/Develop/MiCO/include/MicoDrivers/MicoDriverPwm.h",
		"/Users/William/Develop/MiCO/Board/MiCOKit-3165/platform.h",
		"/Users/William/Develop/MiCO/Board/MiCOKit-3165/platform.c",
		"/Users/William/Develop/MiCO/Platform/MCU/STM32F4xx/peripherals/paltform_rtc.c",
		"/Users/William/Develop/MiCO/Demos/COM.MXCHIP.BASIC/os/os_mutex.c",
		"/Users/William/Develop/MiCO/MICO/system/mico_system_power_daemon.c",
		"/Users/William/Develop/MiCO/Board/MiCOKit-3288/platform.c",
		"/Users/William/Develop/MiCO/MICO/system/mdns/mico_mdns.c",
		"/Users/William/Develop/MiCO/MICO/system/easylink/system_easylink.c",
		"/Users/William/Develop/MiCO/include/mico_wlan.h",
		"/Users/William/Develop/MiCO/MICO/system/config_server/config_server.c",
		"/Users/William/Develop/MiCO/Demos/COM.MXCHIP.SPP/MICOConfigDelegate.c",
		"/Users/William/Develop/MiCO/Demos/COM.MXCHIP.SPP/mico_config.h",
		"/Users/William/Develop/MiCO/Demos/COM.MXCHIP.BASIC/mico_config.h",
		"/Users/William/Develop/MiCO/MICO/system/mico_system_monitor.c",
		"/Users/William/Develop/MiCO/include/MICO.h",
		"/Users/William/Develop/MiCO/include/mico_socket.h",
		"/Users/William/Develop/MiCO/MICO/system/mico_system_init.c",
		"/Users/William/Develop/MiCO/Platform/MCU/STM32F4xx/peripherals/platform_gpio.c",
		"/Users/William/Develop/MiCO/MICO/system/mico_system_notification.c",
		"/Users/William/Develop/MiCO/include/mico_security.h",
		"/Users/William/Develop/MiCO/include/mico_rtos.h",
		"/Users/William/Develop/MiCO/include/mico_platform.h",
		"/Users/William/Develop/MiCO/Platform/MCU/STM32F2xx/peripherals/platform_gpio.c",
		"/Users/william/Develop/MiCO/Board/MiCOKit-3165/platform_config.h",
		"/Users/william/Develop/MiCO/Platform/MCU/STM32F4xx/peripherals/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h",
		"/Users/William/Develop/MiCO/Platform/MCU/STM32F4xx/peripherals/platform_pwm.c",
		"/Users/William/Develop/MiCO/Board/MiCOKit-3088/platform.c",
		"/Users/William/Develop/MiCO/Support/MDNSUtils.c",
		"/Users/William/Develop/MiCO/Platform/MCU/mico_platform_common.c",
		"/Users/william/Develop/MiCO/Platform/MCU/STM32F4xx/peripherals/platform_mcu_peripheral.h",
		"/Users/William/Develop/MiCO/Platform/MCU/STM32F4xx/peripherals/platform_spi.c",
		"/Users/William/Develop/MiCO/Board/MiCOKit-3288/platform.h",
		"/Users/William/Develop/MiCO/Platform/include/platform_peripheral.h",
		"/Users/William/Develop/MiCO/Platform/MCU/wlan_platform_common.c",
		"/Users/William/Develop/MiCO/Board/MiCOKit-3162/platform.c",
		"/Users/William/Develop/MiCO/Platform/Drivers/spi_flash/spi_flash_platform.c",
		"/Users/william/Develop/MiCO/Platform/include/platform_peripheral.h",
		"/Users/William/Develop/MiCO/include/MicoPlatform.h",
		"/Users/William/Develop/MiCO/MICO/MICOEntrance.c",
		"/Users/William/Develop/MiCO/MICO/EasyLink/EasyLink.c",
		"/Users/William/Develop/MiCO/MICO/MICONotificationCenter.c",
		"/Users/William/Develop/MiCO/Projects/STM32F4xx/COM.MXCHIP.SPP/sublime/COM.MXCHIP.SPP.sublime-project",
		"/Users/William/Develop/MiCO/Demos/COM.APPLE.HOMEKIT/HomeKitServer.c",
		"/Users/William/Develop/MiCO/Demos/COM.APPLE.HOMEKIT/HomeKitUserInterface.c",
		"/Users/William/Develop/MiCO/Board/MiCOKit-3162/platform_config.h",
		"/Users/William/Develop/MiCO/Board/MiCOKit-F205/platform.c",
		"/Users/William/Develop/MiCO/Board/EMW5088/platform.c",
		"/Users/William/Develop/MiCO/Platform/MCU/MX1101/peripherals/Libraries/inc/irqs.h",
		"/Users/William/Develop/MiCO/Platform/MCU/MX1101/platform_init.c",
		"/Users/William/Develop/MiCO/Board/MiCOKit-3165/platform_config.h",
		"/Users/William/Develop/MiCO/include/Debug.h",
		"/Users/William/Develop/MiCO/Platform/MCU/MX1101/peripherals/platform_i2c.c",
		"/Users/William/Develop/MiCO/Platform/MCU/MX1101/peripherals/platform_mcu_powersave.c",
		"/Users/William/Develop/MiCO/Platform/MCU/MX1101/peripherals/platform_pwm.c",
		"/Users/William/Develop/MiCO/Platform/MCU/MX1101/peripherals/platform_rng.c",
		"/Users/William/Develop/MiCO/Platform/MCU/MX1101/peripherals/platform_spi.c",
		"/Users/William/Develop/MiCO/Platform/MCU/MX1101/peripherals/platform_adc.c",
		"/Users/William/Develop/MiCO/Platform/MCU/STM32F2xx/peripherals/platform_mcu_peripheral.h",
		"/Users/William/Develop/MiCO/Platform/Drivers/spi_flash/spi_flash.c",
		"/Users/william/Develop/MiCO/Platform/drivers/spi_flash/spi_flash.h",
		"/Users/William/Develop/MiCO/Platform/MCU/STM32F4xx/peripherals/platform_mcu_peripheral.h",
		"/Users/William/Develop/MiCO/Platform/MCU/STM32F4xx/peripherals/platform_flash.c",
		"/Users/William/Develop/MiCO/Platform/MCU/STM32F4xx/peripherals/platform_uart.c",
		"/Users/William/Develop/MiCO/MICO/MICOMfgtest.c",
		"/Users/william/Develop/MiCO/Board/MiCOKit-3288/platform.h",
		"/Users/William/Develop/MiCO/Platform/MCU/STM32F2xx/peripherals/platform_flash.c",
		"/Users/william/Develop/MiCO/include/MicoDrivers/MICODriverI2c.h",
		"/Users/William/Develop/MiCO/Platform/include/wlan_platform_common.h",
		"/Users/William/Develop/MiCO/Platform/MCU/STM32F4xx/EMW1062_Driver/wlan_bus_sdio.c",
		"/Users/William/Develop/MiCO/Platform/MCU/STM32F4xx/EMW1088_Driver/wlan_bus.c",
		"/Users/William/Develop/MiCO/Platform/MCU/STM32F4xx/Wi-Fi_Bus_Driver/wlan_bus_sdio.c",
		"/Users/william/Develop/MiCO/Platform/include/wlan_platform_common.h",
		"/Users/William/Develop/MiCO/Platform/MCU/STM32F4xx/Wi-Fi_Bus_Driver/read_wifi_firmware.c",
		"/Users/William/Develop/MiCO/Board/MiCOKit-3288/platform_config.h",
		"/Users/William/Develop/MiCO/Board/MiCOKit-3288/platform_spi_flash.c",
		"/Users/william/Develop/MiCO/Platform/MCU/STM32F4xx/peripherals/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_gpio.h",
		"/Users/William/Develop/MiCO/Board/MiCOKit-3165/platform_spi_flash.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/MICO/MICOEntrance.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/MICO/EasyLink/EasyLink.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/COM.MXCHIP.SPP/MICOConfigDelegate.c",
		"/Users/William/Library/Application Support/Sublime Text 2/Packages/SublimeClang/clang/include/stddef.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/COM.MXCHIP.SPP/MICOBonjour.c",
		"/Users/william/Develop/mxchipWNet Pro Demo@EMW316x/include/MicoPlatform.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Board/MiCOKit-3088/platform.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Support/SocketUtils.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/MCU/MX1101/peripherals/Libraries/inc/uart.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/MCU/STM32F2xx/peripherals/MicoDriverUart.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Support/SocketUtils.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/MCU/STM32F2xx/RVMDK/startup_stm32f2xx_RVMDK.s",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Projects/STM32F4xx/COM.MXCHIP.SPP/sublime/COM.MXCHIP.SPP.sublime-project",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/STM32F2xx/STM32F2xx_Drv/startup_stm32f2xx_RVMDK.s",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M4/STM32F4xx/STM32F4xx_Drv/startup_stm32f2xx_IAR.s",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/COM.MXCHIP.SPP/MICOAppEntrance.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/IDEs/Keil/patch_keil.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/STM32F2xx/stm32f2xx_platform.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/External/JSON-C/json_util.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/EMW3162/platform.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/STM32F2xx/STM32F2xx_Drv/startup_stm32f2xx_bootloader_IAR.s",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/MICO/MICODefine.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/support/Common.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/MICO_EVB_1/platform.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/STM32F2xx/STM32F2xx_Drv/STM32F2xx_StdPeriph_Driver/CMSIS/core_cmInstr.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/include/MicoAlgorithm.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/include/MICORTOS.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/include/MicoSocket.h",
		"/Users/william/Develop/mxchipWNet Pro Demo@EMW316x/Library/support/Common.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/support/StringUtils.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/support/StringUtils.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/crt0_IAR.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/STM32F2xx/STM32F2xx_Drv/startup_stm32f2xx_IAR.s",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/MICO/MICOMfgtest.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/Common/Cortex-M3/crt0.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/support/HTTPUtils.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/MICO/MICOParaStorage.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/support/HTTPUtils.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/MICO/MICOConfigServer.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/External/FatFs/src/ff_gen_drv.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/External/FatFs/src/diskio.h",
		"/Users/william/Develop/Clang_lib/ARMCC/include/stdio.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/COM.MXCHIP.SPP/MICOAppDefine.h",
		"/Users/william/Develop/mxchipWNet Pro Demo@EMW316x/Platform/EMW3162/platform_common_config.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/COM.MXCHIP.HA/HaProtocol.c"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			"<open folders>",
			"",
			"<open folders>",
			"/Users/william/Develop/E-DICE",
			"",
			"<open folders>",
			"/Volumes/C/develop/MDV-STM32-407/EMB_STM32_407_wifi_lib_V2.0.0/",
			"/Volumes/C/develop/MDV-STM32-407/EMB_STM32_407_wifi_lib_V2.0.0/Project/复件 Data_Send&Recv",
			"/Volumes/C/develop/MDV-STM32-407/EMB_STM32_407_wifi_lib_V2.0.0/Project/STM32F4xx_StdPeriph_Examples"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"PlatformEasyLinkButtonClickedCallback",
			"RTC_DeInit",
			"PlatformEasyLinkButtonClickedCallback",
			"appRestoreDefault_callback",
			"__strdup_trans_dot",
			"possiable",
			"mico_system_init",
			"mico_system_state_t",
			"mico_system_monitor_register",
			"mico_notify_TCP_CLIENT_CONNECTED",
			"@ref",
			"Register a user application to Mi",
			"exti_init_structure",
			"commbo",
			"13",
			"dns_write_string",
			"dns_write_name",
			"txt_att",
			"->txt_att",
			"frequency",
			"mico_notify_SYS_WILL_POWER_OFF",
			"mico_notify_SYS_WILL_POWER_OFF_function",
			"sendNotifySYSWillPowerOff",
			"sys_state_change_sem",
			"_button_EL_irq_handler",
			"USB_DETECT",
			"max_syscall_int_prio",
			"MMFLT_IRQn_PRIO",
			"USE_MICO_SPI_FLASH",
			"EMW1062",
			"MICO_DEFAULT_TICK_RATE_HZ",
			"MCU_CLOCK_HZ",
			"generic_sflash_command",
			"spi_baudrate_prescalers",
			"calculate_prescaler",
			"sflash_platform_send_recv",
			"generic_sflash_command",
			"flash",
			"platform_uart_stop_bits_t",
			"platform_spi_slave_transfer_status_t",
			"i2c",
			"ssid_get",
			"get_line",
			"host_enable_oob_interrupt",
			"host_platform_get_oob_interrupt_pin",
			"bootloader_start",
			"sdio_int_pin_irq_handler",
			"sdio_oob_irq_handler",
			"sdio_enable_it_irq",
			"sdio_enable_bus_irq",
			"host_enable_oob_interrupt",
			"FLASH_PIN_SPI_CS",
			"wiced_platform_notify_irq",
			"sdio_oob_irq_handler",
			"WL_GPIO1",
			"sdio_irq",
			"MICO_I2C_1",
			"MICO_UNUSED",
			"platform_i2c_peripherals",
			"platform_i2c_per",
			"BuartExFifoInit",
			"SocketAccept",
			"MicoSystemStandBy",
			"hard_fault_handler_c",
			"init_platform",
			"mico_get_time",
			"sys_command",
			"sys_command.o",
			"fwrite",
			"fopen",
			"freopen",
			"fopen",
			"mico_mutex_t",
			"RTC_WKUP_irq",
			"bootloader_start",
			"WEAK",
			"ICC",
			"EXTI3_IRQHandler",
			"InitMd5",
			"sys_state_change_sem",
			"PlatformEasyLinkButtonLongPressedCallback",
			"str",
			"strdump",
			"strd",
			"strdump",
			"memrlen",
			"strnlen",
			"memrlen",
			"size_t",
			"READ_LENGTH",
			"CR",
			"findChunkedDataLength",
			"1500",
			"findChunkedDataLength",
			"realloc",
			"findChunkedDataLength",
			"->chunkedData =",
			"chunk",
			"findChunkedDataLength",
			"HTTPHeaderParse",
			"chunck",
			"inHeader->chunkedData =",
			"inHeader->chunkedData",
			"otaDataPtr",
			"HTTPHeaderClear",
			"unlock",
			"dataEndedbyClose",
			"onClear",
			"flashStorageAddress",
			"  /* For MXCHIP OTA function, store extra data to OTA data temporary */\n//   err = HTTPGetHeaderField( inHeader->buf, inHeader->len, \"Content-Type\", NULL, NULL, &value, &valueSize, NULL );\n\n//   if(err == kNoErr && strnicmpx( value, valueSize, kMIMEType_MXCHIP_OTA ) == 0){\n// #ifdef MICO_FLASH_FOR_UPDATE  \n//     http_utils_log(\"Receive OTA data!\");    \n//     flashStorageAddress = UPDATE_START_ADDRESS;\n//     err = MicoFlashInitialize( MICO_FLASH_FOR_UPDATE );\n//     require_noerr(err, exit);\n//     err = MicoFlashErase(MICO_FLASH_FOR_UPDATE, UPDATE_START_ADDRESS, UPDATE_END_ADDRESS);\n//     require_noerr(err, exit);\n//     err = MicoFlashWrite(MICO_FLASH_FOR_UPDATE, &flashStorageAddress, (uint8_t *)end, inHeader->extraDataLen);\n//     require_noerr(err, exit);\n// #else\n//     http_utils_log(\"OTA flash memory is not existed!\");\n//     err = kUnsupportedErr;\n// #endif\n//     goto exit;\n//   }",
			"HTTPHeaderClear\nHTTPHeaderClear",
			"HTTPHeaderClear",
			"dataEndedbyClose",
			"onReceivedData",
			"writeToFlash",
			"onReceivedData",
			"crea",
			"mico_notify_WIFI_SCAN_COMPLETE_function",
			"HTTPHeaderCreate",
			"_ConnectToMfgAP",
			"stop_mode_power_down_hook",
			"_button_STANDBY_irq_handler",
			"%f",
			"lf",
			"_cleanEasyLinkResource",
			"_Led_EL_timer",
			"ConfigWillStop",
			"ConfigWillStop\nConfigWillStop"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"possible",
			"MICO",
			"MICO_DISABLE_STDIO"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.clang":
	{
		"height": 146.0
	},
	"output.exec":
	{
		"height": 100.0
	},
	"output.git":
	{
		"height": 100.0
	},
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"micode",
				"MICO/MICODefine.h"
			],
			[
				"",
				"STM32F2xx_StdPeriph_Driver/src/stm32f2xx_i2c.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 248.0,
	"status_bar_visible": true
}
